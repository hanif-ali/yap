import type { Metadata } from "next";

import {
  ClerkProvider,
  SignedOut,
  SignedIn,
  SignInButton,
  SignUpButton,
} from "@clerk/nextjs";
import { Montserrat } from "next/font/google";
import { ThemeProvider } from "next-themes";
// import { ThemeToggle } from "../components/ThemeToggle";
import "./globals.css";
import ConvexClientProvider from "./ConvexClientProvider";
import { ThemeToggle } from "@/components/ThemeToggle";
import { SidebarWrapper } from "@/components/app-sidebar/sidebar-wrapper";
import { preloadQuery } from "convex/nextjs";
import { api } from "../../convex/_generated/api";

const montserrat = Montserrat({
  variable: "--font-montserrat",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const preloadedThreads = await preloadQuery(api.threads.getForCurrentUser);

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${montserrat.variable} antialiased`}>
        <ClerkProvider>
            <ConvexClientProvider>
              <ThemeProvider attribute="class" defaultTheme="dark" enableSystem>
                <SignedOut>
                  <SignInButton />
                  <SignUpButton />
                </SignedOut>
                <SignedIn>
                  <SidebarWrapper preloadedThreads={preloadedThreads}>
                    {children}
                  </SidebarWrapper>
                </SignedIn>
                <ThemeToggle />
              </ThemeProvider>
            </ConvexClientProvider>
        </ClerkProvider>
      </body>
    </html>
  );
}
